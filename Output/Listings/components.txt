; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\output\objects\components.o --asm_dir=..\Output\Listings\ --list_dir=..\Output\Listings\ --depend=..\output\objects\components.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Core\Inc -I..\Driver -I..\Driver\Inc -I..\Middle\Inc -I..\rtthread\include -I..\rtthread\include\libc -I..\rtthread\components\finsh -I..\rtthread -I..\rtthread\components\drivers\include -ID:\Software\Keil\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\Software\Keil\ARM\CMSIS\Include -D__UVISION_VERSION=539 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DRT_USING_DEVICE --omf_browse=..\output\objects\components.crf ..\rtthread\src\components.c]
                          THUMB

                          AREA ||i.$Sub$$main||, CODE, READONLY, ALIGN=1

                  ||$Sub$$main|| PROC
;;;148    /* re-define main function */
;;;149    int $Sub$$main(void)
000000  b510              PUSH     {r4,lr}
;;;150    {
;;;151        rt_hw_interrupt_disable();
000002  f7fffffe          BL       rt_hw_interrupt_disable
;;;152        rtthread_startup();
000006  f7fffffe          BL       rtthread_startup
;;;153        return 0;
00000a  2000              MOVS     r0,#0
;;;154    }
00000c  bd10              POP      {r4,pc}
;;;155    int mymain(void)
                          ENDP


                          AREA ||i.main_thread_entry||, CODE, READONLY, ALIGN=1

                  main_thread_entry PROC
;;;191    /* the system main thread */
;;;192    void main_thread_entry(void *parameter)
000000  b510              PUSH     {r4,lr}
;;;193    {
000002  4604              MOV      r4,r0
;;;194        extern int main(void);
;;;195        extern int $Super$$main(void);
;;;196    
;;;197        /* RT-Thread components initialization */
;;;198        rt_components_init();
000004  f7fffffe          BL       rt_components_init
;;;199    
;;;200        /* invoke system main function */
;;;201    #if defined (__CC_ARM)
;;;202        $Super$$main(); /* for ARMCC. */
000008  f7fffffe          BL       ||$Super$$main||
;;;203    #elif defined(__ICCARM__) || defined(__GNUC__)
;;;204        main();
;;;205    #endif
;;;206    }
00000c  bd10              POP      {r4,pc}
;;;207    
                          ENDP


                          AREA ||i.mymain||, CODE, READONLY, ALIGN=1

                  mymain PROC
;;;154    }
;;;155    int mymain(void)
000000  b510              PUSH     {r4,lr}
;;;156    {
;;;157    	rt_hw_interrupt_disable();
000002  f7fffffe          BL       rt_hw_interrupt_disable
;;;158        rtthread_startup();
000006  f7fffffe          BL       rtthread_startup
;;;159        return 0;
00000a  2000              MOVS     r0,#0
;;;160    }
00000c  bd10              POP      {r4,pc}
;;;161    #elif defined(__ICCARM__)
                          ENDP


                          AREA ||i.rt_application_init||, CODE, READONLY, ALIGN=2

                  rt_application_init PROC
;;;207    
;;;208    void rt_application_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;209    {
;;;210        rt_thread_t tid;
;;;211    
;;;212    #ifdef RT_USING_HEAP
;;;213        tid = rt_thread_create("main", main_thread_entry, RT_NULL,
000002  2014              MOVS     r0,#0x14
000004  210a              MOVS     r1,#0xa
000006  f44f7300          MOV      r3,#0x200
00000a  2200              MOVS     r2,#0
00000c  e9cd1000          STRD     r1,r0,[sp,#0]
000010  4904              LDR      r1,|L4.36|
000012  a005              ADR      r0,|L4.40|
000014  f7fffffe          BL       rt_thread_create
000018  4604              MOV      r4,r0
;;;214                               RT_MAIN_THREAD_STACK_SIZE, RT_THREAD_PRIORITY_MAX / 3, 20);
;;;215        RT_ASSERT(tid != RT_NULL);
;;;216    #else
;;;217        rt_err_t result;
;;;218    
;;;219        tid = &main_thread;
;;;220        result = rt_thread_init(tid, "main", main_thread_entry, RT_NULL,
;;;221                                main_stack, sizeof(main_stack), RT_THREAD_PRIORITY_MAX / 3, 20);
;;;222        RT_ASSERT(result == RT_EOK);
;;;223    	
;;;224        /* if not define RT_USING_HEAP, using to eliminate the warning */
;;;225        (void)result;
;;;226    #endif
;;;227    
;;;228        rt_thread_startup(tid);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       rt_thread_startup
;;;229    }
000020  bd1c              POP      {r2-r4,pc}
;;;230    
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      main_thread_entry
                  |L4.40|
000028  6d61696e          DCB      "main",0
00002c  00      
00002d  00                DCB      0
00002e  00                DCB      0
00002f  00                DCB      0

                          AREA ||i.rt_components_board_init||, CODE, READONLY, ALIGN=2

                  rt_components_board_init PROC
;;;92      */
;;;93     void rt_components_board_init(void)
000000  b510              PUSH     {r4,lr}
;;;94     {
;;;95     #if RT_DEBUG_INIT
;;;96         int result;
;;;97         const struct rt_init_desc *desc;
;;;98         for (desc = &__rt_init_desc_rti_board_start; desc < &__rt_init_desc_rti_board_end; desc ++)
;;;99         {
;;;100            rt_kprintf("initialize %s", desc->fn_name);
;;;101            result = desc->fn();
;;;102            rt_kprintf(":%d done\n", result);
;;;103        }
;;;104    #else
;;;105        const init_fn_t *fn_ptr;
;;;106    
;;;107        for (fn_ptr = &__rt_init_rti_board_start; fn_ptr < &__rt_init_rti_board_end; fn_ptr++)
000002  4c04              LDR      r4,|L5.20|
000004  e002              B        |L5.12|
                  |L5.6|
;;;108        {
;;;109            (*fn_ptr)();
000006  6820              LDR      r0,[r4,#0]
000008  4780              BLX      r0
00000a  1d24              ADDS     r4,r4,#4              ;107
                  |L5.12|
00000c  4802              LDR      r0,|L5.24|
00000e  4284              CMP      r4,r0                 ;107
000010  d3f9              BCC      |L5.6|
;;;110        }
;;;111    #endif
;;;112    }
000012  bd10              POP      {r4,pc}
;;;113    
                          ENDP

                  |L5.20|
                          DCD      __rt_init_rti_board_start
                  |L5.24|
                          DCD      __rt_init_rti_board_end

                          AREA ||i.rt_components_init||, CODE, READONLY, ALIGN=2

                  rt_components_init PROC
;;;116     */
;;;117    void rt_components_init(void)
000000  b510              PUSH     {r4,lr}
;;;118    {
;;;119    #if RT_DEBUG_INIT
;;;120        int result;
;;;121        const struct rt_init_desc *desc;
;;;122    
;;;123        rt_kprintf("do components intialization.\n");
;;;124        for (desc = &__rt_init_desc_rti_board_end; desc < &__rt_init_desc_rti_end; desc ++)
;;;125        {
;;;126            rt_kprintf("initialize %s", desc->fn_name);
;;;127            result = desc->fn();
;;;128            rt_kprintf(":%d done\n", result);
;;;129        }
;;;130    #else
;;;131        const init_fn_t *fn_ptr;
;;;132    
;;;133        for (fn_ptr = &__rt_init_rti_board_end; fn_ptr < &__rt_init_rti_end; fn_ptr ++)
000002  4c04              LDR      r4,|L6.20|
000004  e002              B        |L6.12|
                  |L6.6|
;;;134        {
;;;135            (*fn_ptr)();
000006  6820              LDR      r0,[r4,#0]
000008  4780              BLX      r0
00000a  1d24              ADDS     r4,r4,#4              ;133
                  |L6.12|
00000c  4802              LDR      r0,|L6.24|
00000e  4284              CMP      r4,r0                 ;133
000010  d3f9              BCC      |L6.6|
;;;136        }
;;;137    #endif
;;;138    }
000012  bd10              POP      {r4,pc}
;;;139    
                          ENDP

                  |L6.20|
                          DCD      __rt_init_rti_board_end
                  |L6.24|
                          DCD      __rt_init_rti_end

                          AREA ||i.rti_board_end||, CODE, READONLY, ALIGN=1

                  rti_board_end PROC
;;;77     
;;;78     static int rti_board_end(void)
000000  2000              MOVS     r0,#0
;;;79     {
;;;80         return 0;
;;;81     }
000002  4770              BX       lr
;;;82     INIT_EXPORT(rti_board_end, "1.end");
                          ENDP


                          AREA ||i.rti_board_start||, CODE, READONLY, ALIGN=1

                  rti_board_start PROC
;;;71     
;;;72     static int rti_board_start(void)
000000  2000              MOVS     r0,#0
;;;73     {
;;;74         return 0;
;;;75     }
000002  4770              BX       lr
;;;76     INIT_EXPORT(rti_board_start, "0.end");
                          ENDP


                          AREA ||i.rti_end||, CODE, READONLY, ALIGN=1

                  rti_end PROC
;;;83     
;;;84     static int rti_end(void)
000000  2000              MOVS     r0,#0
;;;85     {
;;;86         return 0;
;;;87     }
000002  4770              BX       lr
;;;88     INIT_EXPORT(rti_end, "6.end");
                          ENDP


                          AREA ||i.rti_start||, CODE, READONLY, ALIGN=1

                  rti_start PROC
;;;65      */
;;;66     static int rti_start(void)
000000  2000              MOVS     r0,#0
;;;67     {
;;;68         return 0;
;;;69     }
000002  4770              BX       lr
;;;70     INIT_EXPORT(rti_start, "0");
                          ENDP


                          AREA ||i.rtthread_startup||, CODE, READONLY, ALIGN=1

                  rtthread_startup PROC
;;;230    
;;;231    int rtthread_startup(void)
000000  b510              PUSH     {r4,lr}
;;;232    {
;;;233        rt_hw_interrupt_disable();
000002  f7fffffe          BL       rt_hw_interrupt_disable
;;;234    
;;;235        /* board level initalization
;;;236         * NOTE: please initialize heap inside board initialization.
;;;237         */
;;;238        rt_hw_board_init();
000006  f7fffffe          BL       rt_hw_board_init
;;;239    
;;;240        /* show RT-Thread version */
;;;241        rt_show_version();
00000a  f7fffffe          BL       rt_show_version
;;;242    
;;;243        /* timer system initialization */
;;;244        rt_system_timer_init();
00000e  f7fffffe          BL       rt_system_timer_init
;;;245    
;;;246        /* scheduler system initialization */
;;;247        rt_system_scheduler_init();
000012  f7fffffe          BL       rt_system_scheduler_init
;;;248    
;;;249    #ifdef RT_USING_SIGNALS
;;;250        /* signal system initialization */
;;;251        rt_system_signal_init();
;;;252    #endif
;;;253    
;;;254        /* create init_thread */
;;;255        rt_application_init();
000016  f7fffffe          BL       rt_application_init
;;;256    
;;;257        /* timer thread initialization */
;;;258        rt_system_timer_thread_init();
00001a  f7fffffe          BL       rt_system_timer_thread_init
;;;259    
;;;260        /* idle thread initialization */
;;;261        rt_thread_idle_init();
00001e  f7fffffe          BL       rt_thread_idle_init
;;;262    
;;;263        /* start scheduler */
;;;264        rt_system_scheduler_start();
000022  f7fffffe          BL       rt_system_scheduler_start
;;;265    
;;;266        /* never reach here */
;;;267        return 0;
000026  2000              MOVS     r0,#0
;;;268    }
000028  bd10              POP      {r4,pc}
;;;269    #endif
                          ENDP


                          AREA ||.rti_fn.0||, DATA, READONLY, ALIGN=2

                  __rt_init_rti_start
                  ||__tagsym$$used||
                          DCD      rti_start

                          AREA ||.rti_fn.0.end||, DATA, READONLY, ALIGN=2

                  __rt_init_rti_board_start
                  |symbol_number.89|
                          DCD      rti_board_start

                          AREA ||.rti_fn.1.end||, DATA, READONLY, ALIGN=2

                  __rt_init_rti_board_end
                  |symbol_number.90|
                          DCD      rti_board_end

                          AREA ||.rti_fn.6.end||, DATA, READONLY, ALIGN=2

                  __rt_init_rti_end
                  |symbol_number.91|
                          DCD      rti_end
