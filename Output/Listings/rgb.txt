; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\output\objects\rgb.o --asm_dir=..\Output\Listings\ --list_dir=..\Output\Listings\ --depend=..\output\objects\rgb.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Core\Inc -I..\Driver -I..\Driver\Inc -I..\Middle\Inc -I..\rtthread\include -I..\rtthread\include\libc -I..\rtthread\components\finsh -I..\rtthread -I..\rtthread\components\drivers\include -ID:\Software\Keil\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\Software\Keil\ARM\CMSIS\Include -D__UVISION_VERSION=539 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DRT_USING_DEVICE --omf_browse=..\output\objects\rgb.crf ..\Driver\Src\rgb.c]
                          THUMB

                          AREA ||i.rgbBlueOff||, CODE, READONLY, ALIGN=2

                  rgbBlueOff PROC
;;;106    */
;;;107    void rgbBlueOff(void)
000000  b510              PUSH     {r4,lr}
;;;108    {
;;;109     	GPIO_SetBits(GPIOB , GPIO_Pin_5);
000002  2120              MOVS     r1,#0x20
000004  4801              LDR      r0,|L1.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;110    	
;;;111    	return ;
;;;112    }
00000a  bd10              POP      {r4,pc}
;;;113    
                          ENDP

                  |L1.12|
                          DCD      0x40010c00

                          AREA ||i.rgbBlueOn||, CODE, READONLY, ALIGN=2

                  rgbBlueOn PROC
;;;93     */
;;;94     void rgbBlueOn(void)
000000  b510              PUSH     {r4,lr}
;;;95     {
;;;96      	GPIO_ResetBits(GPIOB , GPIO_Pin_5);
000002  2120              MOVS     r1,#0x20
000004  4801              LDR      r0,|L2.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;97     	
;;;98     	return ;
;;;99     }
00000a  bd10              POP      {r4,pc}
;;;100    
                          ENDP

                  |L2.12|
                          DCD      0x40010c00

                          AREA ||i.rgbCyanOff||, CODE, READONLY, ALIGN=1

                  rgbCyanOff PROC
;;;186    */
;;;187    void rgbCyanOff(void)
000000  b510              PUSH     {r4,lr}
;;;188    {
;;;189     	rgbGreenOff();
000002  f7fffffe          BL       rgbGreenOff
;;;190    	rgbBlueOff();
000006  f7fffffe          BL       rgbBlueOff
;;;191    	return ;
;;;192    }
00000a  bd10              POP      {r4,pc}
;;;193    
                          ENDP


                          AREA ||i.rgbCyanOn||, CODE, READONLY, ALIGN=1

                  rgbCyanOn PROC
;;;173    */
;;;174    void rgbCyanOn(void)
000000  b510              PUSH     {r4,lr}
;;;175    {
;;;176     	rgbGreenOn();
000002  f7fffffe          BL       rgbGreenOn
;;;177    	rgbBlueOn();
000006  f7fffffe          BL       rgbBlueOn
;;;178    	return ;
;;;179    }
00000a  bd10              POP      {r4,pc}
;;;180    
                          ENDP


                          AREA ||i.rgbGreenOff||, CODE, READONLY, ALIGN=2

                  rgbGreenOff PROC
;;;80     */
;;;81     void rgbGreenOff(void)
000000  b510              PUSH     {r4,lr}
;;;82     {
;;;83      	GPIO_SetBits(GPIOB , GPIO_Pin_1);
000002  2102              MOVS     r1,#2
000004  4801              LDR      r0,|L5.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;84     	
;;;85     	return ;
;;;86     }
00000a  bd10              POP      {r4,pc}
;;;87     
                          ENDP

                  |L5.12|
                          DCD      0x40010c00

                          AREA ||i.rgbGreenOn||, CODE, READONLY, ALIGN=2

                  rgbGreenOn PROC
;;;66     */
;;;67     void rgbGreenOn(void)
000000  b510              PUSH     {r4,lr}
;;;68     {
;;;69      	GPIO_ResetBits(GPIOB , GPIO_Pin_1);
000002  2102              MOVS     r1,#2
000004  4801              LDR      r0,|L6.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;70     	
;;;71     	return ;
;;;72     }
00000a  bd10              POP      {r4,pc}
;;;73     
                          ENDP

                  |L6.12|
                          DCD      0x40010c00

                          AREA ||i.rgbInit||, CODE, READONLY, ALIGN=2

                  rgbInit PROC
;;;17     */
;;;18     void rgbInit(void)
000000  b508              PUSH     {r3,lr}
;;;19     {
;;;20      
;;;21      	GPIO_InitTypeDef RgbGpioInitStructure;
;;;22     	
;;;23     	RCC_APB2PeriphClockCmd(RGB_RCC , ENABLE);		//GPIOB ±÷” πƒ‹
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;24     	RgbGpioInitStructure.GPIO_Pin   = RGB_R_PIN | RGB_G_PIN | RGB_B_PIN;
00000a  2023              MOVS     r0,#0x23
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;25     	RgbGpioInitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000010  2001              MOVS     r0,#1
000012  f88d0002          STRB     r0,[sp,#2]
;;;26     	RgbGpioInitStructure.GPIO_Mode  = GPIO_Mode_Out_PP;
000016  2010              MOVS     r0,#0x10
000018  f88d0003          STRB     r0,[sp,#3]
;;;27     	
;;;28     	GPIO_Init(GPIOB, &RgbGpioInitStructure);
00001c  4669              MOV      r1,sp
00001e  4805              LDR      r0,|L7.52|
000020  f7fffffe          BL       GPIO_Init
;;;29     	rgbRedOff();
000024  f7fffffe          BL       rgbRedOff
;;;30     	rgbGreenOff();
000028  f7fffffe          BL       rgbGreenOff
;;;31     	rgbBlueOff();
00002c  f7fffffe          BL       rgbBlueOff
;;;32     	return ;
;;;33     }
000030  bd08              POP      {r3,pc}
;;;34     
                          ENDP

000032  0000              DCW      0x0000
                  |L7.52|
                          DCD      0x40010c00

                          AREA ||i.rgbPurpleOff||, CODE, READONLY, ALIGN=1

                  rgbPurpleOff PROC
;;;160    */
;;;161    void rgbPurpleOff(void)
000000  b510              PUSH     {r4,lr}
;;;162    {
;;;163     	rgbRedOff();
000002  f7fffffe          BL       rgbRedOff
;;;164    	rgbBlueOff();
000006  f7fffffe          BL       rgbBlueOff
;;;165    	return ;
;;;166    }
00000a  bd10              POP      {r4,pc}
;;;167    
                          ENDP


                          AREA ||i.rgbPurpleOn||, CODE, READONLY, ALIGN=1

                  rgbPurpleOn PROC
;;;147    */
;;;148    void rgbPurpleOn(void)
000000  b510              PUSH     {r4,lr}
;;;149    {
;;;150    	rgbRedOn();
000002  f7fffffe          BL       rgbRedOn
;;;151    	rgbBlueOn();
000006  f7fffffe          BL       rgbBlueOn
;;;152    	return ;
;;;153    }
00000a  bd10              POP      {r4,pc}
;;;154    
                          ENDP


                          AREA ||i.rgbRedOff||, CODE, READONLY, ALIGN=2

                  rgbRedOff PROC
;;;53     */
;;;54     void rgbRedOff(void)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56      	GPIO_SetBits(GPIOB , GPIO_Pin_0);
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L10.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;57     	
;;;58     	return ;
;;;59     }
00000a  bd10              POP      {r4,pc}
;;;60     
                          ENDP

                  |L10.12|
                          DCD      0x40010c00

                          AREA ||i.rgbRedOn||, CODE, READONLY, ALIGN=2

                  rgbRedOn PROC
;;;40     */
;;;41     void rgbRedOn(void)
000000  b510              PUSH     {r4,lr}
;;;42     {
;;;43      	GPIO_ResetBits(GPIOB , GPIO_Pin_0);
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L11.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;44     	
;;;45     	return ;
;;;46     }
00000a  bd10              POP      {r4,pc}
;;;47     
                          ENDP

                  |L11.12|
                          DCD      0x40010c00

                          AREA ||i.rgbWhiteOff||, CODE, READONLY, ALIGN=1

                  rgbWhiteOff PROC
;;;133    */
;;;134    void rgbWhiteOff(void)
000000  b510              PUSH     {r4,lr}
;;;135    {
;;;136     	rgbRedOff();
000002  f7fffffe          BL       rgbRedOff
;;;137     	rgbGreenOff();
000006  f7fffffe          BL       rgbGreenOff
;;;138    	rgbBlueOff();
00000a  f7fffffe          BL       rgbBlueOff
;;;139    	return ;
;;;140    }
00000e  bd10              POP      {r4,pc}
;;;141    
                          ENDP


                          AREA ||i.rgbWhiteOn||, CODE, READONLY, ALIGN=1

                  rgbWhiteOn PROC
;;;119    */
;;;120    void rgbWhiteOn(void)
000000  b510              PUSH     {r4,lr}
;;;121    {
;;;122    	rgbRedOn();
000002  f7fffffe          BL       rgbRedOn
;;;123     	rgbGreenOn();
000006  f7fffffe          BL       rgbGreenOn
;;;124    	rgbBlueOn();
00000a  f7fffffe          BL       rgbBlueOn
;;;125    	return ;
;;;126    }
00000e  bd10              POP      {r4,pc}
;;;127    
                          ENDP


                          AREA ||i.rgbYellowOff||, CODE, READONLY, ALIGN=1

                  rgbYellowOff PROC
;;;212    */
;;;213    void rgbYellowOff(void)
000000  b510              PUSH     {r4,lr}
;;;214    {
;;;215     	rgbRedOff();
000002  f7fffffe          BL       rgbRedOff
;;;216     	rgbGreenOff();
000006  f7fffffe          BL       rgbGreenOff
;;;217    	return ;
;;;218    }
00000a  bd10              POP      {r4,pc}
;;;219    
                          ENDP


                          AREA ||i.rgbYellowOn||, CODE, READONLY, ALIGN=1

                  rgbYellowOn PROC
;;;199    */
;;;200    void rgbYellowOn(void)
000000  b510              PUSH     {r4,lr}
;;;201    {
;;;202    	rgbRedOn();
000002  f7fffffe          BL       rgbRedOn
;;;203     	rgbGreenOn();
000006  f7fffffe          BL       rgbGreenOn
;;;204    	return ;
;;;205    }
00000a  bd10              POP      {r4,pc}
;;;206    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\Driver\\Src\\rgb.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_rgb_c_rgbInit____REV16|
#line 463 "..\\Core\\Inc\\cmsis_armcc.h"
|__asm___5_rgb_c_rgbInit____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_rgb_c_rgbInit____REVSH|
#line 478
|__asm___5_rgb_c_rgbInit____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_rgb_c_rgbInit____RRX|
#line 665
|__asm___5_rgb_c_rgbInit____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
