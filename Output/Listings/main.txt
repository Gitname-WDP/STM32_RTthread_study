; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\output\objects\main.o --asm_dir=..\Output\Listings\ --list_dir=..\Output\Listings\ --depend=..\output\objects\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Core\Inc -I..\Driver -I..\Driver\Inc -I..\Middle\Inc -I..\rtthread\include -I..\rtthread\include\libc -I..\rtthread\components\finsh -I..\rtthread -I..\rtthread\components\drivers\include -ID:\Software\Keil\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\Software\Keil\ARM\CMSIS\Include -D__UVISION_VERSION=539 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DRT_USING_DEVICE --omf_browse=..\output\objects\main.crf ..\main\main.c]
                          THUMB

                          AREA ||i.LOW_ENTRY||, CODE, READONLY, ALIGN=1

                  LOW_ENTRY PROC
;;;22     
;;;23     void LOW_ENTRY()
000000  e00b              B        |L1.26|
                  |L1.2|
;;;24     {
;;;25     	while(1)
;;;26     	{
;;;27     		rgbRedOn();
000002  f7fffffe          BL       rgbRedOn
;;;28     		rt_thread_sleep(500);
000006  f44f70fa          MOV      r0,#0x1f4
00000a  f7fffffe          BL       rt_thread_sleep
;;;29     		rgbRedOff();
00000e  f7fffffe          BL       rgbRedOff
;;;30     		rt_thread_sleep(500);
000012  f44f70fa          MOV      r0,#0x1f4
000016  f7fffffe          BL       rt_thread_sleep
                  |L1.26|
00001a  e7f2              B        |L1.2|
;;;31     	}
;;;32     
;;;33     }
;;;34     
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;35     
;;;36     int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;37     {
;;;38     	rt_kprintf("开始执行程序！！！！\r\n");
000002  a020              ADR      r0,|L2.132|
000004  f7fffffe          BL       rt_kprintf
;;;39     	
;;;40     	root_thread = rt_thread_create("run", run_entry, NULL, 256, RT_THREAD_PRIORITY_MAX-12, 20) ;
000008  2014              MOVS     r0,#0x14
00000a  9000              STR      r0,[sp,#0]
00000c  f44f7380          MOV      r3,#0x100
000010  2200              MOVS     r2,#0
000012  4922              LDR      r1,|L2.156|
000014  9001              STR      r0,[sp,#4]
000016  a022              ADR      r0,|L2.160|
000018  f7fffffe          BL       rt_thread_create
00001c  4921              LDR      r1,|L2.164|
00001e  6008              STR      r0,[r1,#0]  ; root_thread
;;;41     	LOW_THREAD_ID = rt_thread_create("LOW", LOW_ENTRY, NULL, 256, RT_THREAD_PRIORITY_MAX-1, 20) ;
000020  2014              MOVS     r0,#0x14
000022  211f              MOVS     r1,#0x1f
000024  f44f7380          MOV      r3,#0x100
000028  2200              MOVS     r2,#0
00002a  e9cd1000          STRD     r1,r0,[sp,#0]
00002e  491e              LDR      r1,|L2.168|
000030  a01e              ADR      r0,|L2.172|
000032  f7fffffe          BL       rt_thread_create
000036  491e              LDR      r1,|L2.176|
000038  6008              STR      r0,[r1,#0]  ; LOW_THREAD_ID
;;;42     	thread_result = rt_thread_startup(root_thread);
00003a  481a              LDR      r0,|L2.164|
00003c  6800              LDR      r0,[r0,#0]  ; root_thread
00003e  f7fffffe          BL       rt_thread_startup
000042  491c              LDR      r1,|L2.180|
000044  6008              STR      r0,[r1,#0]  ; thread_result
;;;43     	if(thread_result != RT_EOK)
000046  4608              MOV      r0,r1
000048  6800              LDR      r0,[r0,#0]  ; thread_result
00004a  b118              CBZ      r0,|L2.84|
;;;44     	{
;;;45     		rt_kprintf("run线程创建失败！！！\r\n");
00004c  a01a              ADR      r0,|L2.184|
00004e  f7fffffe          BL       rt_kprintf
000052  e002              B        |L2.90|
                  |L2.84|
;;;46     	}
;;;47     	else
;;;48     	{
;;;49     		rt_kprintf("run线程创建成功！！！\r\n");
000054  a01e              ADR      r0,|L2.208|
000056  f7fffffe          BL       rt_kprintf
                  |L2.90|
;;;50     	}
;;;51     	thread_result = rt_thread_startup(LOW_THREAD_ID);
00005a  4815              LDR      r0,|L2.176|
00005c  6800              LDR      r0,[r0,#0]  ; LOW_THREAD_ID
00005e  f7fffffe          BL       rt_thread_startup
000062  4914              LDR      r1,|L2.180|
000064  6008              STR      r0,[r1,#0]  ; thread_result
;;;52     	if(thread_result != RT_EOK)
000066  4608              MOV      r0,r1
000068  6800              LDR      r0,[r0,#0]  ; thread_result
00006a  b118              CBZ      r0,|L2.116|
;;;53     	{
;;;54     		rt_kprintf("LOW线程创建失败！！！\r\n");
00006c  a01e              ADR      r0,|L2.232|
00006e  f7fffffe          BL       rt_kprintf
000072  e002              B        |L2.122|
                  |L2.116|
;;;55     	}
;;;56     	else
;;;57     	{
;;;58     		rt_kprintf("LOW线程创建成功！！！\r\n");
000074  a022              ADR      r0,|L2.256|
000076  f7fffffe          BL       rt_kprintf
                  |L2.122|
;;;59     	}
;;;60     
;;;61     	rt_kprintf("所有线程创建完毕！！！\r\n");
00007a  a027              ADR      r0,|L2.280|
00007c  f7fffffe          BL       rt_kprintf
;;;62     
;;;63     	return 0;
000080  2000              MOVS     r0,#0
;;;64     	
;;;65     }
000082  bd1c              POP      {r2-r4,pc}
;;;66     
                          ENDP

                  |L2.132|
000084  bfaacabc          DCB      191,170,202,188,214,180,208,208,179,204,208,242,163,161,163
000088  d6b4d0d0
00008c  b3ccd0f2
000090  a3a1a3  
000093  a1a3a1a3          DCB      161,163,161,163,161,"\r\n",0
000097  a10d0a00
00009b  00                DCB      0
                  |L2.156|
                          DCD      run_entry
                  |L2.160|
0000a0  72756e00          DCB      "run",0
                  |L2.164|
                          DCD      root_thread
                  |L2.168|
                          DCD      LOW_ENTRY
                  |L2.172|
0000ac  4c4f5700          DCB      "LOW",0
                  |L2.176|
                          DCD      LOW_THREAD_ID
                  |L2.180|
                          DCD      thread_result
                  |L2.184|
0000b8  72756ecf          DCB      "run",207,223,179,204,180,180,189,168,202,167,176,220,163
0000bc  dfb3ccb4
0000c0  b4bda8ca
0000c4  a7b0dca3
0000c8  a1a3a1a3          DCB      161,163,161,163,161,"\r\n",0
0000cc  a10d0a00
                  |L2.208|
0000d0  72756ecf          DCB      "run",207,223,179,204,180,180,189,168,179,201,185,166,163
0000d4  dfb3ccb4
0000d8  b4bda8b3
0000dc  c9b9a6a3
0000e0  a1a3a1a3          DCB      161,163,161,163,161,"\r\n",0
0000e4  a10d0a00
                  |L2.232|
0000e8  4c4f57cf          DCB      "LOW",207,223,179,204,180,180,189,168,202,167,176,220,163
0000ec  dfb3ccb4
0000f0  b4bda8ca
0000f4  a7b0dca3
0000f8  a1a3a1a3          DCB      161,163,161,163,161,"\r\n",0
0000fc  a10d0a00
                  |L2.256|
000100  4c4f57cf          DCB      "LOW",207,223,179,204,180,180,189,168,179,201,185,166,163
000104  dfb3ccb4
000108  b4bda8b3
00010c  c9b9a6a3
000110  a1a3a1a3          DCB      161,163,161,163,161,"\r\n",0
000114  a10d0a00
                  |L2.280|
000118  cbf9d3d0          DCB      203,249,211,208,207,223,179,204,180,180,189,168,205,234,177
00011c  cfdfb3cc
000120  b4b4bda8
000124  cdeab1  
000127  cfa3a1a3          DCB      207,163,161,163,161,163,161,"\r\n",0
00012b  a1a3a10d
00012f  0a00    
000131  00                DCB      0
000132  00                DCB      0
000133  00                DCB      0

                          AREA ||i.run_entry||, CODE, READONLY, ALIGN=2

                  run_entry PROC
;;;10     // SystemInit 复位函数
;;;11     void run_entry()
000000  e013              B        |L3.42|
                  |L3.2|
;;;12     {
;;;13     	while(1)
;;;14     	{
;;;15     		Buzzer(0);
000002  2200              MOVS     r2,#0
000004  f44f7180          MOV      r1,#0x100
000008  4808              LDR      r0,|L3.44|
00000a  f7fffffe          BL       GPIO_WriteBit
;;;16     		rt_thread_sleep(500);
00000e  f44f70fa          MOV      r0,#0x1f4
000012  f7fffffe          BL       rt_thread_sleep
;;;17     		Buzzer(0);
000016  2200              MOVS     r2,#0
000018  f44f7180          MOV      r1,#0x100
00001c  4803              LDR      r0,|L3.44|
00001e  f7fffffe          BL       GPIO_WriteBit
;;;18     		rt_thread_sleep(500);
000022  f44f70fa          MOV      r0,#0x1f4
000026  f7fffffe          BL       rt_thread_sleep
                  |L3.42|
00002a  e7ea              B        |L3.2|
;;;19     	}
;;;20     
;;;21     }
;;;22     
                          ENDP

                  |L3.44|
                          DCD      0x40010800

                          AREA ||.data||, DATA, ALIGN=2

                  root_thread
                          DCD      0x00000000
                  thread_result
                          DCD      0x00000000
                  LOW_THREAD_ID
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\main\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_139aa042____REV16|
#line 463 "..\\Core\\Inc\\cmsis_armcc.h"
|__asm___6_main_c_139aa042____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_139aa042____REVSH|
#line 478
|__asm___6_main_c_139aa042____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_139aa042____RRX|
#line 665
|__asm___6_main_c_139aa042____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
